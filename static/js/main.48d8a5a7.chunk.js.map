{"version":3,"sources":["Common/Icons/IconTheme.tsx","Common/Theme/Theme.ts","Common/Theme/withStyles.tsx","Layout/Header.tsx","Layout/Footer.tsx","constants/routes.ts","Common/Icons/User.tsx","Common/Icons/index.tsx","Home/index.tsx","EmptyPage/index.tsx","EmptyPage/EmptyPage.tsx","Notes/note1.tsx","Notes/ListNotes.tsx","Routes/Menu.tsx","Resume/index.tsx","Notes/index.tsx","Routes/index.tsx","Routes/Routes.tsx","Layout/index.tsx","Layout/Layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["IconTheme","Theme","spacing","withStyles","styles","options","injectSheet","theme","name","overrides","merge","Header","location","useLocation","pathname","footer","textAlign","classes","Footer","Paragraph","className","Date","getFullYear","HOME","RESUME","RLS","SIDE","NOTES","User","bi","fc","IconApp","props","Icon","getIcon","Title","Typography","Text","homeParagraph","margin","width","menu","code","Menu","mode","omitHome","EmptyPage","note1","ListNotes","useState","files","setFiles","useEffect","filesArray","push","component","Note1","map","file","idx","Fragment","key","menuItems","url","ROUTES","title","Home","exact","icon","menuStyle","fontSize","padding","marginTop","marginBottom","MenuApp","antd","iconTheme","setIconTheme","filter","m","defaultSelectedKeys","item","Item","onClick","to","style","Group","Object","keys","label","value","onChange","e","target","optionType","Routes","menuItem","index","Component","path","Layout","children","Content","Sider","color","antConfig","prefixCls","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.48d8a5a7.chunk.js","sourcesContent":["enum IconTheme {\n  antd = \"antd\",\n  fc = \"fc\",\n  bi = \"bi\",\n}\n\nconst IconThemeOptions = () => {\n  return Object.keys(IconTheme).map((theme) => {\n    return { label: theme, value: theme };\n  });\n};\n\nexport { IconTheme, IconThemeOptions };\n","const Theme = {\n  spacing: 16,\n};\nexport default Theme;\n","import injectSheet from \"react-jss\";\nimport merge from \"lodash/merge\";\n\nconst withStyles = (styles: any, options?: any) =>\n  injectSheet((theme) => {\n    if (\n      options &&\n      options.name &&\n      theme &&\n      theme.overrides &&\n      theme.overrides[options.name]\n    ) {\n      return merge(styles(theme), theme.overrides[options.name]);\n    }\n\n    return styles(theme);\n  });\n\nexport default withStyles;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Layout } from \"antd\";\n\nconst Header = () => {\n  const location = useLocation();\n  return (\n    <Layout.Header>\n      {location.pathname !== \"/\" && <h3>Header</h3>}\n    </Layout.Header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Layout, Typography } from \"antd\";\nimport { withStyles } from \"../Common/Theme\";\n\nconst Footer = ({ classes }: any) => {\n  return (\n    <Layout.Footer>\n      <Typography.Paragraph className={classes.footer}>\n        &copy; Copyright {new Date().getFullYear()}\n      </Typography.Paragraph>\n    </Layout.Footer>\n  );\n};\n\nconst style = () => ({\n  footer: { textAlign: \"right\" },\n});\n\nexport default withStyles(style)(Footer);\n","export const HOME = \"/\";\nexport const RESUME = \"/resume\";\nexport const RLS = \"/rls\";\nexport const SIDE = \"/side\";\nexport const NOTES = \"/notes\";\n","import React from \"react\";\nimport * as AI from \"react-icons/ai\";\nimport { BiUser } from \"react-icons/bi\";\nimport { FcBusinessman } from \"react-icons/fc\";\n\nimport { IconTheme } from \"./IconTheme\";\n\ninterface $Props {\n  theme?: IconTheme | string;\n}\n\nconst User = ({ theme }: $Props) => {\n  switch (theme) {\n    case IconTheme.bi:\n      return <BiUser />;\n    case IconTheme.fc:\n      return <FcBusinessman />;\n    default:\n      return <AI.AiOutlineUser />;\n  }\n};\n\nexport default User;\n","import React from \"react\";\nimport Icon from \"@ant-design/icons\";\n\nimport { IconTheme, IconThemeOptions } from \"./IconTheme\";\nimport User from \"./User\";\n\nexport { IconTheme, IconThemeOptions };\n\ninterface $Props {\n  theme: any;\n  name: string;\n}\n\nconst getIcon = ({ theme, name }: $Props) => {\n  switch (name) {\n    case \"User\":\n      return <User theme={theme} />;\n\n    default:\n      return <span>Icon</span>;\n  }\n};\n\nconst IconApp = (props: $Props) => {\n  return <Icon>{getIcon(props)}</Icon>;\n};\nexport default IconApp;\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport { withStyles } from \"../Common/Theme\";\nimport MenuApp from \"../Routes/Menu\";\n\nconst { Title, Text } = Typography;\n\nconst HomePage = ({ classes }: any) => {\n  return (\n    <Typography>\n      <Title>Michael Kramer</Title>\n      <Text code={true}>Simple website to display what I have done</Text>\n      <div className={classes.homeParagraph}>\n        I am a devoted Full Stack Software Engineer who loves solving problems\n        and learning new technologies. I have built products from idea to\n        implementation and moved from one platform to another. I am excited to\n        dive into a new experience.\n      </div>\n      <MenuApp mode=\"horizontal\" className={classes.menu} omitHome={true} />\n    </Typography>\n  );\n};\n\nconst style = (theme?: any) => ({\n  homeParagraph: {\n    margin: `${theme.spacing * 2}px auto`,\n    width: \"80vw\",\n    textAlign: \"center\",\n  },\n  menu: { textAlign: \"center\" },\n});\n\nexport default withStyles(style)(HomePage);\n","import EmptyPage from \"./EmptyPage\";\nexport default EmptyPage;\n","import React from \"react\";\n\nconst EmptyPage = () => {\n  return (\n    <div>\n      <h3>EmptyPage</h3>\n    </div>\n  );\n};\n\nexport default EmptyPage;\n","import React from \"react\";\n\nconst note1 = () => {\n  return (\n    <div>\n      <h3>note1</h3>\n    </div>\n  );\n};\n\nexport default note1;\n","import React, { useState, useEffect } from \"react\";\nimport Note1 from \"./note1\";\nconst ListNotes = () => {\n  const [files, setFiles] = useState<{ name: string; component: any }[]>([]);\n\n  useEffect(() => {\n    const filesArray: { name: string; component: any }[] = [];\n    filesArray.push({ name: \"Note 1\", component: Note1 });\n    setFiles(filesArray);\n    return () => {};\n  }, []);\n  return (\n    <div>\n      <h3>ListNotes</h3>\n      {files.map((file, idx) => (\n        <React.Fragment key={idx}>\n          <div>{file.name}</div>\n          <div>\n            <file.component />\n          </div>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default ListNotes;\n","import React, { useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Menu, Radio, Typography } from \"antd\";\nimport { ROUTES } from \"../constants\";\nimport Icon from \"../Common/Icons\";\nimport Home from \"../Home\";\nimport Resume from \"../Resume\";\nimport EmptyPage from \"../EmptyPage\";\nimport Notes from \"../Notes\";\n//! import ContactForm from \"../Contact\"; - this has been stashed\nimport { IconTheme, IconThemeOptions } from \"../Common/Icons\";\n\ninterface MenuItem {\n  url: string;\n  title: string;\n  exact?: boolean;\n  icon?: string;\n  onClick?: any;\n  component?: any; // () => JSX.Element |\n}\n\nconst menuItems: MenuItem[] = [\n  { url: ROUTES.HOME, title: \"Home\", component: Home, exact: true },\n  {\n    url: ROUTES.RESUME,\n    title: \"Resume\",\n    component: Resume,\n    icon: \"User\",\n  },\n  { url: ROUTES.RLS, title: \"Rls\", icon: \"User\" },\n  { url: ROUTES.SIDE, title: \"Side ideas\", component: EmptyPage },\n  { url: ROUTES.NOTES, title: \"Notes\", component: Notes },\n  //! { url: \"/contact\", title: \"Contact\", component: ContactForm },\n];\n\nconst menuStyle = {\n  fontSize: \"12px\",\n  padding: \"0 16px\",\n  marginTop: \"4px\",\n  marginBottom: \"8px\",\n};\n\ninterface IMenuAppProps extends React.HTMLAttributes<HTMLBaseElement> {\n  mode?:\n    | \"vertical\"\n    | \"horizontal\"\n    | \"vertical-left\"\n    | \"vertical-right\"\n    | \"inline\"\n    | undefined;\n  omitHome?: boolean;\n}\n\nconst MenuApp = (props: IMenuAppProps) => {\n  const [iconTheme, setIconTheme] = useState<IconTheme>(IconTheme.antd);\n  const location = useLocation();\n  const menu = props.omitHome\n    ? menuItems.filter((m) => m.url !== ROUTES.HOME)\n    : menuItems;\n  return (\n    <>\n      <Menu\n        defaultSelectedKeys={[location.pathname]}\n        theme=\"light\"\n        mode={props.mode ?? \"vertical\"}\n        className={props.className}\n      >\n        {menu.map((item: MenuItem) => (\n          <Menu.Item\n            key={item.url}\n            onClick={item.onClick}\n            icon={item.icon && <Icon theme={iconTheme} name={item.icon} />}\n          >\n            {item.url ? <Link to={item.url}>{item.title}</Link> : item.title}\n          </Menu.Item>\n        ))}\n      </Menu>\n\n      <Typography.Text style={menuStyle}>\n        I love Icons so play around\n      </Typography.Text>\n      <div style={menuStyle}>\n        <Radio.Group\n          options={IconThemeOptions()}\n          onChange={(e) => {\n            setIconTheme(e.target.value);\n          }}\n          value={iconTheme}\n          optionType=\"button\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport { menuItems };\n\nexport default MenuApp;\n","import React from \"react\";\n\nconst Resume = () => {\n  return (\n    <div>\n      <h3>Resume</h3>\n    </div>\n  );\n};\n\nexport default Resume;\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nimport ListNotes from \"./ListNotes\";\nconst Notes = () => {\n  return (\n    <Typography>\n      <Typography.Title>Notes</Typography.Title>\n      <ListNotes />\n    </Typography>\n  );\n};\n\nexport default Notes;\n","import Menu, { menuItems } from \"./Menu\";\nimport Routes from \"./Routes\";\n\nexport { menuItems, Menu };\nexport default Routes;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport EmptyPage from \"../EmptyPage\";\nimport { menuItems } from \"./Menu\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      {menuItems.map((menuItem, index) => {\n        const Component = menuItem.component || EmptyPage;\n\n        return (\n          <Route exact={menuItem.exact} key={index} path={menuItem.url}>\n            <Component />\n          </Route>\n        );\n      })}\n      <Route path=\"*\">\n        <EmptyPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import Layout from \"./Layout\";\nexport default Layout;\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport { useLocation } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { Menu } from \"../Routes\";\n\ninterface $Props {\n  children: any;\n}\n\nconst LayoutComponent = ({ children }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Layout>\n      <Header />\n      <Layout>\n        {location.pathname === \"/\" && (\n          <Layout.Content className=\"App\">{children}</Layout.Content>\n        )}\n        {location.pathname !== \"/\" && (\n          <>\n            <Layout.Sider style={{ color: \"white\" }}>\n              <Menu />\n            </Layout.Sider>\n            <Layout>\n              <Layout.Content className=\"App\">{children}</Layout.Content>\n            </Layout>\n          </>\n        )}\n      </Layout>\n\n      <Footer />\n    </Layout>\n  );\n};\n\nexport default LayoutComponent;\n","import React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ConfigProvider } from \"antd\";\nimport { ThemeProvider } from \"react-jss\";\n\nimport \"./App.less\";\nimport { Theme } from \"./Common/Theme\";\nimport Layout from \"./Layout\";\nimport Routes from \"./Routes\";\n\nconst antConfig = {\n  prefixCls: \"mk\",\n};\n\nfunction App() {\n  return (\n    <ConfigProvider {...antConfig}>\n      <ThemeProvider theme={Theme}>\n        <Router>\n          <Layout>\n            <Routes />\n          </Layout>\n        </Router>\n      </ThemeProvider>\n    </ConfigProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}