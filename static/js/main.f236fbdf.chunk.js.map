{"version":3,"sources":["Common/Icons/IconTheme.ts","Common/Icons/IconList.ts","Common/Icons/index.tsx","Common/GlobalContext.tsx","Common/Theme/Theme.ts","Common/Theme/withStyles.tsx","Layout/Header.tsx","Layout/Footer.tsx","constants/routes.ts","Home/index.tsx","Resume/index.tsx","Common/Icons/eslint-facepalm.tsx","SideIdeas/LoopTest.tsx","SideIdeas/EslintFacepalm.tsx","SideIdeas/index.tsx","Notes/ListNotes.tsx","Notes/index.tsx","Routes/Menu.tsx","EmptyPage/index.tsx","EmptyPage/EmptyPage.tsx","Routes/index.tsx","Routes/Routes.tsx","Layout/index.tsx","Layout/Layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["IconTheme","IconThemes","label","antd","value","icon","AI","fc","FC","bi","BI","IconList","name","theme","component","IconApp","props","newIcon","find","item","getIcon","Icon","context","React","createContext","GlobalProvider","children","useState","iconTheme","setIconTheme","Provider","Theme","spacing","withStyles","styles","options","injectSheet","overrides","merge","Header","location","useLocation","pathname","footer","textAlign","classes","Footer","Paragraph","className","Date","getFullYear","HOME","RESUME","RLS","SIDE","NOTES","Title","Typography","Text","homeParagraph","margin","width","menu","code","Menu","mode","omitHome","root","marginRight","button","img","useContext","href","process","target","rel","type","src","alt","EslintFacepalmIcon","xmlns","height","fill","d","fontSize","x","y","borderBottom","padding","marginBottom","fontFamily","backgroundColor","maxHeight","overflowY","cardData","marginTop","border","array1","setArray1","array2","setArray2","numberOf","setNumberOf","limit","setLimit","resultTest1","setResultTest1","result1Performance","setResult1Performance","resultTest2","setResultTest2","result2Performance","setResult2Performance","resultTest3","setResultTest3","result3Performance","setResult3Performance","fillArray","i","push","Math","floor","random","_","orderBy","triggerTest1","t0","performance","now","newArr","uniq","sortArr","take","returnSmallestOfBothArrays","t1","triggerTest3","ta","tempArray","smallest","min","apply","idx","indexOf","splice","returnSmallestOfBothArrays3","tb","rowProps","gutter","span","onChange","e","parseInt","onClick","JSON","stringify","length","a","current","includes","returnSmallestOfBothArrays2","triggerTest2","card","paddingTop","meta","setCardData","useEffect","file","axios","get","then","response","data","source","history","useHistory","useRouteMatch","path","url","hoverable","cover","actions","Meta","title","description","notes","md","listItem","setD","map","note","key","marginLeft","menuItems","ROUTES","Home","exact","Resume","SideIdeas","Notes","menuStyle","MenuApp","filter","m","defaultSelectedKeys","Item","to","style","Group","optionType","Button","EmptyPage","Routes","menuItem","index","Component","Layout","Content","Sider","color","antConfig","prefixCls","App","GlobalContext","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"4YAIKA,E,+HAAAA,K,YAAAA,E,QAAAA,E,SAAAA,M,KAML,IAAMC,EAAa,CACjB,CACEC,MAAOF,EAAUG,KACjBC,MAAOJ,EAAUG,KACjBE,KAAMC,KAER,CACEJ,MAAOF,EAAUO,GACjBH,MAAOJ,EAAUO,GACjBF,KAAMG,KAER,CACEN,MAAOF,EAAUS,GACjBL,MAAOJ,EAAUS,GACjBJ,KAAMK,MCUKC,EAtBW,CACxB,CAAEC,KAAM,OAAQC,MAAOb,EAAUG,KAAMW,UAAWR,KAClD,CAAEM,KAAM,OAAQC,MAAOb,EAAUS,GAAIK,UAAWJ,KAChD,CAAEE,KAAM,OAAQC,MAAOb,EAAUO,GAAIO,UAAWN,KAEhD,CAAEI,KAAM,MAAOC,MAAOb,EAAUG,KAAMW,UAAWR,KACjD,CAAEM,KAAM,MAAOC,MAAOb,EAAUS,GAAIK,UAAWJ,KAC/C,CAAEE,KAAM,MAAOC,MAAOb,EAAUO,GAAIO,UAAWN,KAE/C,CAAEI,KAAM,OAAQC,MAAOb,EAAUG,KAAMW,UAAWR,KAClD,CAAEM,KAAM,OAAQC,MAAOb,EAAUS,GAAIK,UAAWJ,KAChD,CAAEE,KAAM,OAAQC,MAAOb,EAAUO,GAAIO,UAAWN,KAEhD,CAAEI,KAAM,OAAQC,MAAOb,EAAUG,KAAMW,UAAWR,KAClD,CAAEM,KAAM,OAAQC,MAAOb,EAAUS,GAAIK,UAAWJ,KAChD,CAAEE,KAAM,OAAQC,MAAOb,EAAUO,GAAIO,UAAWN,KAEhD,CAAEI,KAAM,OAAQC,MAAOb,EAAUG,KAAMW,UAAWR,KAClD,CAAEM,KAAM,OAAQC,MAAOb,EAAUS,GAAIK,UAAWJ,KAChD,CAAEE,KAAM,OAAQC,MAAOb,EAAUO,GAAIO,UAAWN,MCLnCO,EAJC,SAACC,GACf,IAAMX,EAXQ,SAAC,GAA6B,IAA3BQ,EAA0B,EAA1BA,MAAOD,EAAmB,EAAnBA,KAClBK,EAAUN,EAASO,MACvB,SAACC,GAAD,OAAUA,EAAKP,OAASA,GAAQO,EAAKN,QAAUA,KAEjD,OAAII,GAAWA,EAAQH,UACd,kBAACG,EAAQH,UAAT,MAEF,KAIMM,CAAQJ,GACrB,OAAOX,GAAQ,kBAACgB,EAAA,EAAD,KAAOhB,ICtBlBiB,EAAUC,IAAMC,cAAmB,MAEnCC,EAAiB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAoB,EACVC,mBAAoB3B,EAAUG,MADpB,mBACrCyB,EADqC,KAC1BC,EAD0B,KAG5C,OACE,kBAACP,EAAQQ,SAAT,CAAkB1B,MAAO,CAAEwB,YAAWC,iBACnCH,IAIPD,EAAeH,QAAUA,EACVG,QCXAM,EAHD,CACZC,QAAS,I,kBCiBIC,EAfI,SAACC,EAAaC,GAAd,OACjBC,aAAY,SAACvB,GACX,OACEsB,GACAA,EAAQvB,MACRC,GACAA,EAAMwB,WACNxB,EAAMwB,UAAUF,EAAQvB,MAEjB0B,IAAMJ,EAAOrB,GAAQA,EAAMwB,UAAUF,EAAQvB,OAG/CsB,EAAOrB,O,iBCFH0B,EATA,WACb,IAAMC,EAAWC,cACjB,OACE,kBAAC,IAAOF,OAAR,KACyB,MAAtBC,EAASE,UAAoB,wC,SCUrBT,KAJD,iBAAO,CACnBU,OAAQ,CAAEC,UAAW,YAGRX,EAdA,SAAC,GAAsB,IAApBY,EAAmB,EAAnBA,QAChB,OACE,kBAAC,IAAOC,OAAR,KACE,kBAAC,IAAWC,UAAZ,CAAsBC,UAAWH,EAAQF,QAAzC,mBACoB,IAAIM,MAAOC,mB,kBCRxBC,EAAO,IACPC,EAAS,UACTC,EAAM,OACNC,EAAO,QACPC,EAAQ,SCCbC,EAAgBC,IAAhBD,MAAOE,EAASD,IAATC,KA2BAzB,KATD,SAACpB,GAAD,MAAkB,CAC9B8C,cAAe,CACbC,OAAO,GAAD,OAAqB,EAAhB/C,EAAMmB,QAAX,WACN6B,MAAO,OACPjB,UAAW,UAEbkB,KAAM,CAAElB,UAAW,aAGNX,EAzBE,SAAC,GAAsB,IAApBY,EAAmB,EAAnBA,QAClB,OACE,kBAAC,IAAD,KACE,kBAACW,EAAD,uBACA,kBAACE,EAAD,CAAMK,MAAM,GAAZ,8CACA,yBAAKf,UAAWH,EAAQc,eAAxB,+OAMA,kBAACK,GAAD,CAASC,KAAK,aAAajB,UAAWH,EAAQiB,KAAMI,UAAU,Q,SC2BrDjC,KANA,SAACpB,GAAD,MAAkB,CAC/BsD,KAAM,CAAEC,YAA6B,EAAhBvD,EAAMmB,SAC3BqC,OAAQ,CAAEzB,UAAW,SACrB0B,IAAK,CAAET,MAAO,WAGD5B,EAvCA,SAAC,GAAsB,IAApBY,EAAmB,EAAnBA,QACRjB,EAAc2C,qBAAW9C,EAAeH,SAAxCM,UACR,OACE,yBAAKoB,UAAWH,EAAQsB,MACtB,yBAAKnB,UAAWH,EAAQwB,QACtB,kBAAC,IAAD,CACEG,KAAI,UAAKC,WAAL,uBACJC,OAAO,SACPC,IAAI,sBACJC,KAAK,OACLvE,KAAM,kBAAC,EAAD,CAAMQ,MAAOe,EAAWhB,KAAM,SALtC,oBAUF,6BACE,yBACEiE,IAAG,UAAKJ,WAAL,0BACHK,IAAI,iBACJ9B,UAAWH,EAAQyB,OAGvB,6BACE,yBACEO,IAAG,UAAKJ,WAAL,0BACHK,IAAI,iBACJ9B,UAAWH,EAAQyB,W,kBCHdS,EA1BY,WACzB,OACE,yBAAKC,MAAM,6BAA6BnB,MAAM,KAAKoB,OAAO,MACxD,8BACE,oHAKF,0BACEC,KAAK,UACLC,EAAE,6MAEJ,0BACED,KAAK,UACLC,EAAE,icAEJ,0BAAMC,SAAS,MACb,2BAAOC,EAAE,OAAOC,EAAE,QAAlB,qC,kDC2KOrD,KA3BD,SAACpB,GAAD,MAAkB,CAC5BsD,KAAM,CACFvB,UAAW,OACX,OAAQ,CACJ2C,aAAc,iBACdC,QAAQ,GAAD,OAAK3E,EAAMmB,QAAX,QACPyD,aAAc5E,EAAMmB,SAExB,UAAW,CACPY,UAAW,UAGnBmB,KAAM,CACF2B,WAAY,YACZC,gBAAiB,UACjBH,QAAS3E,EAAMmB,QACf4D,UAAW,QACXC,UAAW,UAEfC,SAAU,CACNC,UAA2B,EAAhBlF,EAAMmB,QACjBY,UAAW,OACXoD,OAAQnF,EAAMmF,OACdR,QAAyB,EAAhB3E,EAAMmB,YAIRC,EAxLE,SAAC,GAAiB,IAAfY,EAAc,EAAdA,QAAc,EACFlB,mBAAmB,IADjB,mBACvBsE,EADuB,KACfC,EADe,OAEFvE,mBAAmB,IAFjB,mBAEvBwE,EAFuB,KAEfC,EAFe,OAGEzE,mBAAiB,IAHnB,mBAGvB0E,EAHuB,KAGbC,EAHa,OAIJ3E,mBAAiB,GAJb,mBAIvB4E,EAJuB,KAIhBC,EAJgB,OAMQ7E,mBAAmB,IAN3B,mBAMvB8E,EANuB,KAMVC,EANU,OAOsB/E,qBAPtB,mBAOvBgF,EAPuB,KAOHC,EAPG,OAQQjF,mBAAmB,IAR3B,mBAQvBkF,EARuB,KAQVC,EARU,OASsBnF,qBATtB,mBASvBoF,EATuB,KASHC,EATG,OAUQrF,mBAAmB,IAV3B,mBAUvBsF,EAVuB,KAUVC,EAVU,OAWsBvF,qBAXtB,mBAWvBwF,EAXuB,KAWHC,EAXG,KAaxBC,EAAY,SAAChB,GAEf,IADA,IAAMnB,EAAO,GACJoC,EAAI,EAAGA,EAAIjB,EAAUiB,IAC1BpC,EAAKqC,KAAKC,KAAKC,MAAMD,KAAKE,UAAY,KAAOF,KAAKE,SAAWJ,MAEjE,OAAOK,IAAEC,QAAQ1C,IAQf2C,EAAe,WACjB,IAAMC,EAAaC,YAAYC,MAC/BtB,EA+JR,SAAoCT,EAAkBE,EAAkBI,GACpE,IAAM0B,EAASN,IAAEO,KAAF,sBAAWjC,GAAX,YAAsBE,KAC/BgC,EAAUR,IAAEC,QAAQK,GAC1B,OAAON,IAAES,KAAKD,EAAS5B,GAlKJ8B,CAA2BpC,EAAQE,EAAQI,IAC1D,IAAM+B,EAAaP,YAAYC,MAC/BpB,EAAsB0B,EAAKR,IAUzBS,GAAe,WACjB,IAAMC,EAAaT,YAAYC,MAC/Bd,EAwKR,SAAqCjB,EAAkBE,EAAkBI,GAGrE,IAFA,IAAM0B,EAASN,IAAEO,KAAF,sBAAWjC,GAAX,YAAsBE,KAC/BsC,EAAY,GACTnB,EAAI,EAAGA,EAAIf,EAAOe,IAAK,CAC5B,IAAMoB,EAAWlB,KAAKmB,IAAIC,MAAMpB,KAAMS,GACtCQ,EAAUlB,KAAKmB,GACf,IAAMG,EAAMZ,EAAOa,QAAQJ,GAC3BT,EAAOc,OAAOF,EAAK,GAEvB,OAAOJ,EAjLYO,CAA4B/C,EAAQE,EAAQI,IAC3D,IAAM0C,EAAalB,YAAYC,MAC/BZ,EAAsB6B,EAAKT,IAGzBU,GAAqB,CAAEC,OAAQ,CAAC,GAAI,KAE1C,OACI,kBAAC,IAAD,CAAYnG,UAAWH,EAAQiD,UAC3B,yCACA,4BACI,4BACI,kBAAC,IAAQoD,GACL,kBAAC,IAAD,CAAKE,KAAM,GACP,qDAEJ,kBAAC,IAAD,CAAKA,KAAM,IACP,kBAAC,IAAD,CAAOxE,KAAK,SAASxE,MAAOiG,EAAUgD,SAAU,SAACC,GAAD,OAAOhD,EAAYiD,SAASD,EAAE5E,OAAOtE,aAG7F,6BAAK,kBAAC,IAAD,CAAQoJ,QAAS,kBAxClCtD,EAAUmB,EAAUhB,SACpBD,EAAUiB,EAAUhB,MAuCH,iBACD,6BAAK,0CAAsB,6BAAMoD,KAAKC,UAAUzD,KAChD,6BAAK,0CAAsB,6BAAMwD,KAAKC,UAAUvD,OAGxD,4BACI,kBAAC,IAAQ+C,GACL,kBAAC,IAAD,CAAKE,KAAM,GACP,qDAAsC,kBAAC,IAAD,CAAKA,KAAM,IAAI,kBAAC,IAAD,CAAOxE,KAAK,SAASxE,MAAOmG,EAAO8C,SAAU,SAACC,GAAD,OAAO9C,EAAS+C,SAASD,EAAE5E,OAAOtE,cAIhJ,4BACI,kBAAC,IAAQ8I,GACL,kBAAC,IAAD,CAAKE,KAAM,IACP,gDACA,6BACI,kBAAC,IAAD,CAAQI,QAAS,kBAAM3B,MAAvB,gBACA,6BAAK,yCAAqB,6BAAM4B,KAAKC,UAAUjD,KAC/C,6BAAK,uCAAL,QAA8BE,EAA9B,mBAIR,kBAAC,IAAD,CAAKyC,KAAM,IACP,yDACA,yBAAKpG,UAAWH,EAAQkB,MAAxB,qEAAiG,MAC5F,KADL,iDACyD,KACpD,KAFL,qCAE6C,KACxC,KAHL,iCAGyC,KACpC,UAIjB,4BACI,kBAAC,IAAQmF,GACL,kBAAC,IAAD,CAAKE,KAAM,IACP,gDACA,6BACI,kBAAC,IAAD,CAAQI,QAAS,kBAnExB,WACjB,IAAMhB,EAAaT,YAAYC,MAC/BlB,EA8JR,SAAqCb,EAAkBE,EAAkBI,GAGrE,IADA,IAAM0B,EAAmB,GAChBX,EAAY,EAAGA,EAAIrB,EAAO0D,OAAQrC,IAAK,CAC5C,IAAK,IAAIsC,EAAY,EAAGA,EAAIzD,EAAOwD,OAAQC,IAAK,CAC5C,IAAMC,EAAU5D,EAAOqB,GAAKnB,EAAOyD,GAAKzD,EAAOyD,GAAK3D,EAAOqB,GACtDW,EAAO6B,SAASD,IACjB5B,EAAOV,KAAKsC,GAGpB,GAAI5B,EAAO0B,SAAWpD,EAClB,MAGR,OAAO0B,EA5KY8B,CAA4B9D,EAAQE,EAAQI,IAC3D,IAAM0C,EAAalB,YAAYC,MAC/BhB,EAAsBiC,EAAKT,GA+DoBwB,KAAvB,gBACA,6BAAK,yCAAqB,6BAAMP,KAAKC,UAAU7C,KAC/C,6BAAK,uCAAL,QAA8BE,EAA9B,mBAGR,kBAAC,IAAD,CAAKqC,KAAM,IACP,wDACA,yBAAKpG,UAAWH,EAAQkB,MAAxB,qEAAiG,MAC5F,KADL,+BACuC,KAClC,KAFL,6BAEqC,IAFrC,mBAE0D,MACrD,OAHL,6BAGuC,IAHvC,mBAG4D,MACvD,SAJL,6BAIyC,IAJzC,sCAIiF,KAC5E,SALL,kCAK8C,MACzC,WANL,wBAMsC,KACjC,SAAU,MACV,UACA,OATL,gCAS0C,MACrC,SAVL,SAUqB,KAChB,OAAQ,MACR,KAAM,MACN,KAbL,iBAayB,KACpB,QAKjB,4BACI,kBAAC,IAAQmF,GACL,kBAAC,IAAD,CAAKE,KAAM,IACP,gDACA,6BACI,kBAAC,IAAD,CAAQI,QAAS,kBAAMjB,OAAvB,gBACA,6BAAK,yCAAqB,6BAAMkB,KAAKC,UAAUzC,KAC/C,6BAAK,uCAAL,QAA8BE,EAA9B,mBAGR,kBAAC,IAAD,CAAKiC,KAAM,IACP,iDACA,yBAAKpG,UAAWH,EAAQkB,MAAxB,qEAAiG,MAC5F,KADL,iDACyD,KACpD,KAFL,wBAEgC,KAC3B,KAHL,qBAG6B,IAH7B,gBAG+C,MAC1C,KAAM,KAJX,iDAI+D,KAC1D,KAAM,KALX,4BAK0C,KACrC,KAAM,KANX,wCAMsD,KACjD,KAAM,KAPX,yBAOuC,KAClC,QACA,KATL,oBAS4B,KACvB,e,8CCpGlB9B,MAtBD,SAACpB,GAAD,MAAkB,CAC5BsD,KAAM,CACFqB,QAAQ,KAAD,OAAuB,EAAhB3E,EAAMmB,QAAb,cAA8BnB,EAAMmB,QAApC,cAAiE,EAAhBnB,EAAMmB,QAAvD,MAEP6B,MAAO,OACPjB,UAAW,UAEfqH,KAAM,CACFpG,MAAO,QACPqG,WAA4B,EAAhBrJ,EAAMmB,SAEtBmI,KAAM,CACFvH,UAAW,QAEfkD,SAAU,CACNC,UAA2B,EAAhBlF,EAAMmB,QACjBY,UAAW,OACXoD,OAAQnF,EAAMmF,OACdR,QAAyB,EAAhB3E,EAAMmB,YAIRC,EAlDQ,SAAC,GAAiB,IAAfY,EAAc,EAAdA,QAAc,EACJlB,mBAAS,IADL,mBAC7BmE,EAD6B,KACnBsE,EADmB,KAqBpC,OAXAC,qBAAU,WAPO,IAACC,EAYd,OAZcA,EASV,0FARAxE,EAAS6D,OACFS,EAAY,IAEhBG,KAAMC,IAAIF,GAAMG,MAAK,SAACC,GAAD,OAAmBN,EAAYM,EAASC,SAQ7D,eAIR,IAEI7E,GACH,kBAAC,IAAD,CAAY9C,UAAWH,EAAQiD,UAC3B,kBAAC,KAAD,CAAe8E,OAAQ9E,QC6FpB7D,MAtBD,SAACpB,GAAD,MAAkB,CAC9BsD,KAAM,CACJqB,QAAQ,KAAD,OAAuB,EAAhB3E,EAAMmB,QAAb,cAA8BnB,EAAMmB,QAApC,cAAiE,EAAhBnB,EAAMmB,QAAvD,MAEP6B,MAAO,OACPjB,UAAW,UAEbqH,KAAM,CACJpG,MAAO,QACPqG,WAA4B,EAAhBrJ,EAAMmB,SAEpBmI,KAAM,CACJvH,UAAW,QAEbkD,SAAU,CACRC,UAA2B,EAAhBlF,EAAMmB,QACjBY,UAAW,OACXoD,OAAQnF,EAAMmF,OACdR,QAAyB,EAAhB3E,EAAMmB,YAIJC,EA3GG,SAAC,GAAsB,IAApBY,EAAmB,EAAnBA,QACbgI,EAAUC,cACRlJ,EAAc2C,qBAAW9C,EAAeH,SAAxCM,UAF8B,EAIlBmJ,cAAdC,EAJgC,EAIhCA,KAAMC,EAJ0B,EAI1BA,IAEZ,OACE,yBAAKjI,UAAWH,EAAQsB,MACtB,kBAAC,IAAD,KACE,kBAAC,IAAWX,MAAZ,wCAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE0H,WAAS,EACTlI,UAAWH,EAAQoH,KACnBkB,MACE,6BACE,kBAAC,EAAD,OAGJC,QAAS,CACP,kBAAC,IAAD,CACExG,KAAK,OACLvE,KAAM,kBAAC,EAAD,CAAMQ,MAAOe,EAAWhB,KAAM,SACpC4I,QAAS,kBAAMqB,EAAQtD,KAAR,UAAgB0D,EAAhB,cAHjB,QAOA,kBAAC,IAAD,CACErG,KAAK,OACLvE,KAAM,kBAAC,EAAD,CAAMQ,MAAOe,EAAWhB,KAAM,WACpC4D,KAAM,0DACNE,OAAO,SACPC,IAAI,uBALN,YAWF,kBAAC,IAAK0G,KAAN,CACEC,MAAM,yBACNC,YAAY,6JAGZvI,UAAWH,EAAQsH,QAGvB,kBAAC,IAAD,CACEe,WAAS,EACTlI,UAAWH,EAAQoH,KAEnBmB,QAAS,CACP,kBAAC,IAAD,CACExG,KAAK,OACLvE,KAAM,kBAAC,EAAD,CAAMQ,MAAOe,EAAWhB,KAAM,SACpC4I,QAAS,kBAAMqB,EAAQtD,KAAR,UAAgB0D,EAAhB,gBAHjB,UAUF,kBAAC,IAAKI,KAAN,CACEC,MAAM,YACNC,YAAY,mBACZvI,UAAWH,EAAQsH,SAIzB,kBAAC,IAAD,KAIE,kBAAC,IAAD,CAAOa,KAAI,UAAKA,EAAL,YACT,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,cACT,kBAAC,EAAD,YCtFJQ,GAAQ,CACZ,CACE5K,KACE,wEACF6K,GAAG,GAAD,OAAKhH,WAAL,mCAEJ,CACE7D,KAAM,6EACN6K,GAAG,GAAD,OAAKhH,WAAL,2BAEJ,CACE7D,KAAM,4BACN6K,GAAG,GAAD,OAAKhH,WAAL,2BAEJ,CACE7D,KAAM,kBACN6K,GAAG,GAAD,OAAKhH,WAAL,+BA8CSxC,MARA,SAACpB,GAAD,MAAkB,CAC/BsD,KAAM,CACJvB,UAAW,QAEb8I,SAAU,CACRjG,aAAa,GAAD,OAAK5E,EAAMmB,QAAX,qBAGDC,EA1CG,SAAC,GAAsB,IAApBY,EAAmB,EAAnBA,QAAmB,EACpBlB,mBAAS,IADW,mBAC/BwD,EAD+B,KAC5BwG,EAD4B,KAKtC,OACE,yBAAK3I,UAAWH,EAAQsB,MACtB,6CACA,8BACIqH,IAAS,qCACVA,IACC,4BACG,IACAA,GAAMI,KAAI,SAACC,EAAMhD,GAChB,OACE,wBACEiD,IAAKjD,EACL7F,UAAWH,EAAQ6I,SACnBlC,QAAS,kBAhBPc,EAgBsBuB,EAAKJ,GAfpClB,KAAMC,IAAIF,GAAMG,MAAK,SAACC,GAAD,OAAmBiB,EAAKjB,EAASC,SAD9C,IAACL,IAkBF,kBAAC,IAAD,KAASuB,EAAKjL,WAMxB,6BACE,kBAAC,KAAD,CAAegK,OAAQzF,UCrClBlD,MAHA,SAACpB,GAAD,MAAkB,CAC/BsD,KAAM,CAAE4H,WAAYlL,EAAMmB,QAASoC,YAA6B,EAAhBvD,EAAMmB,YAEzCC,EAXD,SAAC,GAAsB,IAApBY,EAAmB,EAAnBA,QACf,OACE,kBAAC,IAAD,CAAYG,UAAWH,EAAQsB,MAC7B,kBAAC,IAAWX,MAAZ,cACA,kBAAC,GAAD,UCcAwI,GAAwB,CAC5B,CAAEf,IAAKgB,EAAO9I,KAAMmI,MAAO,OAAQxK,UAAWoL,EAAMC,OAAO,GAC3D,CACElB,IAAKgB,EAAO7I,OACZkI,MAAO,SACPxK,UAAWsL,EACX/L,KAAM,QAER,CAAE4K,IAAKgB,EAAO5I,IAAKiI,MAAO,MAAOjL,KAAM,QACvC,CAAE4K,IAAKgB,EAAO3I,KAAMgI,MAAO,aAAcjL,KAAM,OAAQS,UAAWuL,IAClE,CAAEpB,IAAKgB,EAAO1I,MAAO+H,MAAO,QAASjL,KAAM,OAAQS,UAAWwL,KAI1DC,GAAY,CAChBnH,SAAU,OACVI,QAAS,SACTO,UAAW,MACXN,aAAc,OAqED+G,GAvDC,SAACxL,GAA0B,IAAD,IACJuD,qBAAW9C,EAAeH,SAAtDM,EADgC,EAChCA,UAAWC,EADqB,EACrBA,aACbW,EAAWC,cACXqB,EAAO9C,EAAMkD,SACf8H,GAAUS,QAAO,SAACC,GAAD,OAAOA,EAAEzB,MAAQgB,EAAO9I,QACzC6I,GACJ,OACE,oCACE,kBAAC,IAAD,CACEW,oBAAqB,CAACnK,EAASE,UAC/B7B,MAAM,QACNoD,KAAI,UAAEjD,EAAMiD,YAAR,QAAgB,WACpBjB,UAAWhC,EAAMgC,WAEhBc,EAAK8H,KAAI,SAACzK,GAAD,OACR,kBAAC,IAAKyL,KAAN,CACEd,IAAK3K,EAAK8J,IACVzB,QAASrI,EAAKqI,QACdnJ,KAAMc,EAAKd,MAAQ,kBAAC,EAAD,CAAMQ,MAAOe,EAAWhB,KAAMO,EAAKd,QAErDc,EAAK8J,IAAM,kBAAC,IAAD,CAAM4B,GAAI1L,EAAK8J,KAAM9J,EAAKmK,OAAgBnK,EAAKmK,WAKjE,kBAAC,IAAW5H,KAAZ,CAAiBoJ,MAAOP,IAAxB,+BAGA,yBAAKO,MAAOP,IACV,kBAAC,IAAMQ,MAAP,CACE1D,SAAU,SAACC,GACTzH,EAAayH,EAAE5E,OAAOtE,QAExBA,MAAOwB,EACPoL,WAAW,UAEV/M,EAAW2L,KAAI,SAAC/K,GAAD,OACd,kBAAC,IAAMoM,OAAP,CACEnB,IAAKjL,EAAMX,MACXE,MAAOS,EAAMT,MACbQ,KAAMC,EAAMX,OAEZ,kBAAC,IAAD,KACE,kBAACW,EAAMR,KAAP,eCjGD6M,GCCG,WAChB,OACE,6BACE,2CCDSC,GCEA,WACb,OACE,kBAAC,IAAD,KACGnB,GAAUJ,KAAI,SAACwB,EAAUC,GACxB,IAAMC,EAAYF,EAAStM,WAAaoM,GAExC,OACE,kBAAC,IAAD,CAAOf,MAAOiB,EAASjB,MAAOL,IAAKuB,EAAOrC,KAAMoC,EAASnC,KACvD,kBAACqC,EAAD,UAIN,kBAAC,IAAD,CAAOtC,KAAK,KACV,kBAAC,GAAD,SClBOuC,GCWS,SAAC,GAA0B,IAAxB7L,EAAuB,EAAvBA,SACnBc,EAAWC,cAEjB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACyB,MAAtBD,EAASE,UACR,kBAAC,IAAO8K,QAAR,CAAgBxK,UAAU,OAAOtB,GAEZ,MAAtBc,EAASE,UACR,oCACE,kBAAC,IAAO+K,MAAR,CAAcX,MAAO,CAAEY,MAAO,UAC5B,kBAAC1J,GAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAOwJ,QAAR,CAAgBxK,UAAU,OAAOtB,MAMzC,kBAAC,EAAD,QCvBAiM,GAAY,CAChBC,UAAW,MAmBEC,OAhBf,WACE,OACE,kBAACC,EAAD,KACE,kBAAC,IAAmBH,GAClB,kBAAC,IAAD,CAAe9M,MAAOkB,GACpB,kBAAC,IAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,YCVMgM,QACW,cAA7BC,OAAOxL,SAASyL,UAEe,UAA7BD,OAAOxL,SAASyL,UAEhBD,OAAOxL,SAASyL,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,GAAD,MACAC,SAASC,eAAe,SDgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhE,MAAK,SAACiE,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f236fbdf.chunk.js","sourcesContent":["import * as AI from \"react-icons/ai\";\nimport * as BI from \"react-icons/bi\";\nimport * as FC from \"react-icons/fc\";\n\nenum IconTheme {\n  antd = \"antd\",\n  fc = \"fc\",\n  bi = \"bi\",\n}\n\nconst IconThemes = [\n  {\n    label: IconTheme.antd,\n    value: IconTheme.antd,\n    icon: AI.AiOutlineAntDesign,\n  },\n  {\n    label: IconTheme.fc,\n    value: IconTheme.fc,\n    icon: FC.FcApproval,\n  },\n  {\n    label: IconTheme.bi,\n    value: IconTheme.bi,\n    icon: BI.BiCheckbox,\n  },\n];\n\nexport { IconTheme, IconThemes, AI, BI, FC };\n","import { IconTheme } from \"./IconTheme\";\nimport * as AI from \"react-icons/ai\";\nimport * as BI from \"react-icons/bi\";\nimport * as FC from \"react-icons/fc\";\nimport { IconType } from \"react-icons/lib\";\n\ninterface $Icon {\n  name: string;\n  theme: IconTheme;\n  component?: IconType;\n}\n\nconst IconList: $Icon[] = [\n  { name: \"User\", theme: IconTheme.antd, component: AI.AiOutlineUser },\n  { name: \"User\", theme: IconTheme.bi, component: BI.BiUser },\n  { name: \"User\", theme: IconTheme.fc, component: FC.FcBusinessman },\n\n  { name: \"PDF\", theme: IconTheme.antd, component: AI.AiOutlineFilePdf },\n  { name: \"PDF\", theme: IconTheme.bi, component: BI.BiFile },\n  { name: \"PDF\", theme: IconTheme.fc, component: FC.FcDocument },\n\n  { name: \"Home\", theme: IconTheme.antd, component: AI.AiOutlineHome },\n  { name: \"Home\", theme: IconTheme.bi, component: BI.BiHome },\n  { name: \"Home\", theme: IconTheme.fc, component: FC.FcHome },\n\n  { name: \"Idea\", theme: IconTheme.antd, component: AI.AiOutlineBulb },\n  { name: \"Idea\", theme: IconTheme.bi, component: BI.BiBulb },\n  { name: \"Idea\", theme: IconTheme.fc, component: FC.FcIdea },\n\n  { name: \"Note\", theme: IconTheme.antd, component: AI.AiOutlineFileText },\n  { name: \"Note\", theme: IconTheme.bi, component: BI.BiNotepad },\n  { name: \"Note\", theme: IconTheme.fc, component: FC.FcRules },\n];\n\nexport default IconList;\n","import React from \"react\";\nimport Icon from \"@ant-design/icons\";\nimport { IconTheme, IconThemes } from \"./IconTheme\";\nimport IconList from \"./IconList\";\n\nexport { IconTheme, IconThemes };\n\ninterface $Props {\n  theme: any;\n  name: string;\n}\n\nconst getIcon = ({ theme, name }: $Props) => {\n  const newIcon = IconList.find(\n    (item) => item.name === name && item.theme === theme\n  );\n  if (newIcon && newIcon.component) {\n    return <newIcon.component />;\n  }\n  return null;\n};\n\nconst IconApp = (props: $Props) => {\n  const icon = getIcon(props);\n  return icon && <Icon>{icon}</Icon>;\n};\nexport default IconApp;\n","import React, { useState } from \"react\";\nimport { IconTheme } from \"./Icons\";\nconst context = React.createContext<any>(null);\n\nconst GlobalProvider = ({ children }: any) => {\n  const [iconTheme, setIconTheme] = useState<IconTheme>(IconTheme.antd);\n\n  return (\n    <context.Provider value={{ iconTheme, setIconTheme }}>\n      {children}\n    </context.Provider>\n  );\n};\nGlobalProvider.context = context;\nexport default GlobalProvider;\n","const Theme = {\n  spacing: 16,\n};\nexport default Theme;\n","import injectSheet from \"react-jss\";\nimport merge from \"lodash/merge\";\n\nconst withStyles = (styles: any, options?: any) =>\n  injectSheet((theme) => {\n    if (\n      options &&\n      options.name &&\n      theme &&\n      theme.overrides &&\n      theme.overrides[options.name]\n    ) {\n      return merge(styles(theme), theme.overrides[options.name]);\n    }\n\n    return styles(theme);\n  });\n\nexport default withStyles;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Layout } from \"antd\";\n\nconst Header = () => {\n  const location = useLocation();\n  return (\n    <Layout.Header>\n      {location.pathname !== \"/\" && <span>&nbsp;</span>}\n    </Layout.Header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Layout, Typography } from \"antd\";\nimport { withStyles } from \"../Common/Theme\";\n\nconst Footer = ({ classes }: any) => {\n  return (\n    <Layout.Footer>\n      <Typography.Paragraph className={classes.footer}>\n        &copy; Copyright {new Date().getFullYear()}\n      </Typography.Paragraph>\n    </Layout.Footer>\n  );\n};\n\nconst style = () => ({\n  footer: { textAlign: \"right\" },\n});\n\nexport default withStyles(style)(Footer);\n","export const HOME = \"/\";\nexport const RESUME = \"/resume\";\nexport const RLS = \"/rls\";\nexport const SIDE = \"/side\";\nexport const NOTES = \"/notes\";\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport { withStyles } from \"../Common/Theme\";\nimport MenuApp from \"../Routes/Menu\";\n\nconst { Title, Text } = Typography;\n\nconst HomePage = ({ classes }: any) => {\n  return (\n    <Typography>\n      <Title>Michael Kramer</Title>\n      <Text code={true}>Simple website to display what I have done</Text>\n      <div className={classes.homeParagraph}>\n        I am a devoted Full Stack Software Engineer who loves solving problems\n        and learning new technologies. I have built products from idea to\n        implementation and moved from one platform to another. I am excited to\n        dive into a new experience.\n      </div>\n      <MenuApp mode=\"horizontal\" className={classes.menu} omitHome={true} />\n    </Typography>\n  );\n};\n\nconst style = (theme?: any) => ({\n  homeParagraph: {\n    margin: `${theme.spacing * 2}px auto`,\n    width: \"80vw\",\n    textAlign: \"center\",\n  },\n  menu: { textAlign: \"center\" },\n});\n\nexport default withStyles(style)(HomePage);\n","import React, { useContext } from \"react\";\nimport { Button } from \"antd\";\nimport GlobalProvider from \"../Common/GlobalContext\";\nimport { withStyles } from \"../Common/Theme\";\nimport Icon from \"../Common/Icons\";\n\nconst Resume = ({ classes }: any) => {\n  const { iconTheme } = useContext(GlobalProvider.context);\n  return (\n    <div className={classes.root}>\n      <div className={classes.button}>\n        <Button\n          href={`${process.env.PUBLIC_URL}/Michael_Kramer.pdf`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          type=\"link\"\n          icon={<Icon theme={iconTheme} name={\"PDF\"} />}\n        >\n          Download as PDF\n        </Button>\n      </div>\n      <div>\n        <img\n          src={`${process.env.PUBLIC_URL}/Michael_Kramer_01.jpg`}\n          alt=\"Michael Kramer\"\n          className={classes.img}\n        />\n      </div>\n      <div>\n        <img\n          src={`${process.env.PUBLIC_URL}/Michael_Kramer_02.jpg`}\n          alt=\"Michael Kramer\"\n          className={classes.img}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst styles = (theme?: any) => ({\n  root: { marginRight: theme.spacing * 2 },\n  button: { textAlign: \"right\" },\n  img: { width: \"100%\" },\n});\n\nexport default withStyles(styles)(Resume);\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\n\nconst EslintFacepalmIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"81\" height=\"78\">\n      <defs>\n        <style>\n          @import\n          url(&quot;https://fonts.googleapis.com/css?family=Roboto:400,400i,700,700i&quot;);\n        </style>\n      </defs>\n      <path\n        fill=\"#8080f2\"\n        d=\"M18.853 19.95l12.155-7.018a.98.98 0 01.983 0l12.156 7.018c.304.176.492.5.492.852V34.84a.987.987 0 01-.492.852L32 42.7a.98.98 0 01-.983 0l-12.154-7a.984.984 0 01-.492-.852V20.803a.987.987 0 01.492-.852\"\n      />\n      <path\n        fill=\"#4b32c3\"\n        d=\"M63.104 26.344L48.58 1.078C48.053.164 47.08-.5 46.024-.5H16.977c-1.055 0-2.03.674-2.557 1.587L-.104 26.3a3 3 0 000 2.98L14.42 54.33c.528.914 1.502 1.38 2.557 1.38h29.047c1.055 0 2.03-.453 2.557-1.367l14.523-25.1a2.85 2.85 0 000-2.898m-12.026 12.15c0 .37-.224.715-.546.9l-18.5 10.673a1.05 1.05 0 01-1.047 0L12.472 39.395c-.322-.186-.547-.53-.547-.9V17.147a1.06 1.06 0 01.544-.9l18.5-10.673a1.05 1.05 0 011.046 0L50.53 16.246c.322.186.55.53.55.9z\"\n      />\n      <text fontSize=\"60\">\n        <tspan x=\"21.5\" y=\"61.8\">\n          🤦‍♂️\n        </tspan>\n      </text>\n    </svg>\n  );\n};\n\nexport default EslintFacepalmIcon;\n","import React, { useState } from 'react';\nimport { Button, Row, Col, Input, Typography } from \"antd\"\nimport _ from \"lodash\"\n\n\nimport { withStyles } from \"../Common/Theme\";\nimport { RowProps } from 'antd/lib/row';\n\nconst LoopTest = ({ classes }) => {\n    const [array1, setArray1] = useState<number[]>([]);\n    const [array2, setArray2] = useState<number[]>([]);\n    const [numberOf, setNumberOf] = useState<number>(10);\n    const [limit, setLimit] = useState<number>(1);\n\n    const [resultTest1, setResultTest1] = useState<number[]>([]);\n    const [result1Performance, setResult1Performance] = useState<number>();\n    const [resultTest2, setResultTest2] = useState<number[]>([]);\n    const [result2Performance, setResult2Performance] = useState<number>();\n    const [resultTest3, setResultTest3] = useState<number[]>([]);\n    const [result3Performance, setResult3Performance] = useState<number>();\n\n    const fillArray = (numberOf: number) => {\n        const fill = [];\n        for (let i = 0; i < numberOf; i++) {\n            fill.push(Math.floor(Math.random() * (100 * (Math.random() + i))));\n        }\n        return _.orderBy(fill);\n    }\n\n    const fillArrays = () => {\n        setArray1(fillArray(numberOf));\n        setArray2(fillArray(numberOf));\n    }\n\n    const triggerTest1 = () => {\n        const t0: number = performance.now();\n        setResultTest1(returnSmallestOfBothArrays(array1, array2, limit));\n        const t1: number = performance.now();\n        setResult1Performance(t1 - t0);\n    }\n\n    const triggerTest2 = () => {\n        const ta: number = performance.now();\n        setResultTest2(returnSmallestOfBothArrays2(array1, array2, limit));\n        const tb: number = performance.now();\n        setResult2Performance(tb - ta);\n    }\n\n    const triggerTest3 = () => {\n        const ta: number = performance.now();\n        setResultTest3(returnSmallestOfBothArrays3(array1, array2, limit));\n        const tb: number = performance.now();\n        setResult3Performance(tb - ta);\n    }\n\n    const rowProps: RowProps = { gutter: [16, 16] };\n\n    return (\n        <Typography className={classes.cardData}>\n            <h1>Loop Test</h1>\n            <ol>\n                <li>\n                    <Row {...rowProps}>\n                        <Col span={8}>\n                            <label>Number In Array: </label>\n                        </Col>\n                        <Col span={16}>\n                            <Input type=\"number\" value={numberOf} onChange={(e) => setNumberOf(parseInt(e.target.value))} />\n                        </Col>\n                    </Row>\n                    <div><Button onClick={() => fillArrays()}>Fill 2 arrays</Button>\n                        <div><label>Array 1</label><pre>{JSON.stringify(array1)}</pre></div>\n                        <div><label>Array 2</label><pre>{JSON.stringify(array2)}</pre></div>\n                    </div>\n                </li>\n                <li>\n                    <Row {...rowProps}>\n                        <Col span={6}>\n                            <label>Number Returned: </label></Col><Col span={18}><Input type=\"number\" value={limit} onChange={(e) => setLimit(parseInt(e.target.value))} />\n                        </Col>\n                    </Row>\n                </li>\n                <li>\n                    <Row {...rowProps}>\n                        <Col span={12}>\n                            <label>Loop Test 1: </label>\n                            <div>\n                                <Button onClick={() => triggerTest1()}>Trigger Test</Button>\n                                <div><label>Result</label><pre>{JSON.stringify(resultTest1)}</pre></div>\n                                <div><label>Time</label>took {result1Performance} milliseconds</div>\n\n                            </div>\n                        </Col>\n                        <Col span={12}>\n                            <div>Using a lodash functions</div>\n                            <pre className={classes.code}>function fetch(array1: number[], array2: number[], limit: number) {'{\\n'}\n                                {'\\t'}const newArr = _.uniq([...array1, ...array2]);{'\\n'}\n                                {'\\t'}const sortArr = _.orderBy(newArr);{'\\n'}\n                                {'\\t'}return _.take(sortArr, limit);{'\\n'}\n                                {'}\\n'}</pre>\n                        </Col>\n                    </Row>\n                </li>\n                <li>\n                    <Row {...rowProps}>\n                        <Col span={12}>\n                            <label>Loop Test 2: </label>\n                            <div>\n                                <Button onClick={() => triggerTest2()}>Trigger Test</Button>\n                                <div><label>Result</label><pre>{JSON.stringify(resultTest2)}</pre></div>\n                                <div><label>Time</label>took {result2Performance} milliseconds</div>\n                            </div>\n                        </Col>\n                        <Col span={12}>\n                            <div>Using a double for loop</div>\n                            <pre className={classes.code}>function fetch(array1: number[], array2: number[], limit: number) {'{\\n'}\n                                {'\\t'}const newArr: number[] = [];{'\\n'}\n                                {'\\t'}for (let i: number = 0; i {'<'} array1.length; {'{\\n'}\n                                {'\\t\\t'}for (let a: number = 0; a {'<'} array2.length; {'{\\n'}\n                                {'\\t\\t\\t'}const current = array1[i] {'>'} array2[a] ? array2[a] : array1[i];{'\\n'}\n                                {'\\t\\t\\t'}if (!newArr.includes(current)) {'{\\n'}\n                                {'\\t\\t\\t\\t'}newArr.push(current);{'\\n'}\n                                {'\\t\\t\\t'}{'}\\n'}\n                                {'\\t\\t}\\n'}\n                                {'\\t\\t'}if (newArr.length === limit) {'{\\n'}\n                                {'\\t\\t\\t'}break;{'\\n'}\n                                {'\\t\\t'}{'}\\n'}\n                                {'\\t'}{'}\\n'}\n                                {'\\t'}return newArr;{'\\n'}\n                                {'}'}\n                            </pre>\n                        </Col>\n                    </Row>\n                </li>\n                <li>\n                    <Row {...rowProps}>\n                        <Col span={12}>\n                            <label>Loop Test 3: </label>\n                            <div>\n                                <Button onClick={() => triggerTest3()}>Trigger Test</Button>\n                                <div><label>Result</label><pre>{JSON.stringify(resultTest3)}</pre></div>\n                                <div><label>Time</label>took {result3Performance} milliseconds</div>\n                            </div>\n                        </Col>\n                        <Col span={12}>\n                            <div>Using a Math.min</div>\n                            <pre className={classes.code}>function fetch(array1: number[], array2: number[], limit: number) {'{\\n'}\n                                {'\\t'}const newArr = _.uniq([...array1, ...array2]);{'\\n'}\n                                {'\\t'}const tempArray = [];{'\\n'}\n                                {'\\t'}for (let i = 0; i {'<'} limit; i++) {'{\\n'}\n                                {'\\t'}{'\\t'}const smallest = Math.min.apply(Math, newArr);{'\\n'}\n                                {'\\t'}{'\\t'}tempArray.push(smallest);{'\\n'}\n                                {'\\t'}{'\\t'}const idx = newArr.indexOf(smallest);{'\\n'}\n                                {'\\t'}{'\\t'}newArr.splice(idx, 1);{'\\n'}\n                                {'\\t}\\n'}\n                                {'\\t'}return tempArray;{'\\n'}\n                                {'}\\n'}</pre>\n                        </Col>\n                    </Row>\n                </li>\n            </ol>\n        </Typography>\n    );\n};\n\nconst style = (theme?: any) => ({\n    root: {\n        textAlign: \"left\",\n        \"& li\": {\n            borderBottom: \"1px solid #ccc\",\n            padding: `${theme.spacing}px 0`,\n            marginBottom: theme.spacing\n        },\n        \"& label\": {\n            textAlign: \"right\"\n        }\n    },\n    code: {\n        fontFamily: \"monospace\",\n        backgroundColor: \"#efefef\",\n        padding: theme.spacing,\n        maxHeight: \"150px\",\n        overflowY: \"scroll\",\n    },\n    cardData: {\n        marginTop: theme.spacing * 2,\n        textAlign: \"left\",\n        border: theme.border,\n        padding: theme.spacing * 2,\n    },\n});\n\nexport default withStyles(style)(LoopTest);\n\n\nfunction returnSmallestOfBothArrays(array1: number[], array2: number[], limit: number) {\n    const newArr = _.uniq([...array1, ...array2]);\n    const sortArr = _.orderBy(newArr);\n    return _.take(sortArr, limit);\n}\n\nfunction returnSmallestOfBothArrays2(array1: number[], array2: number[], limit: number) {\n    //assume the arrays are already sorted\n    const newArr: number[] = [];\n    for (let i: number = 0; i < array1.length; i++) {\n        for (let a: number = 0; a < array2.length; a++) {\n            const current = array1[i] > array2[a] ? array2[a] : array1[i];\n            if (!newArr.includes(current)) {\n                newArr.push(current);\n            }\n        }\n        if (newArr.length === limit) {\n            break;\n        }\n    }\n    return newArr;\n}\n\nfunction returnSmallestOfBothArrays3(array1: number[], array2: number[], limit: number) {\n    const newArr = _.uniq([...array1, ...array2]);\n    const tempArray = [];\n    for (let i = 0; i < limit; i++) {\n        const smallest = Math.min.apply(Math, newArr);\n        tempArray.push(smallest);\n        const idx = newArr.indexOf(smallest);\n        newArr.splice(idx, 1);\n    }\n    return tempArray;\n};\n","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport { Typography } from \"antd\";\nimport axios from \"axios\";\nimport { withStyles } from \"../Common/Theme\";\n\nconst EslintFacepalm = ({ classes }) => {\n    const [cardData, setCardData] = useState(\"\");\n\n    const readFile = (file: string) => {\n        if (cardData.length) {\n            return setCardData(\"\");\n        }\n        return axios.get(file).then((response: any) => setCardData(response.data));\n    }\n\n    useEffect(() => {\n        readFile(\n            \"https://raw.githubusercontent.com/michaelkramer/eslint-plugin-facepalm/master/README.md\"\n        );\n\n        return () => {\n\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return cardData && (\n        <Typography className={classes.cardData}>\n            <ReactMarkdown source={cardData} />\n        </Typography>\n    );\n};\n\nconst style = (theme?: any) => ({\n    root: {\n        padding: `0 ${theme.spacing * 2}px ${theme.spacing}px ${theme.spacing * 2\n            }px`,\n        width: \"80vw\",\n        textAlign: \"center\",\n    },\n    card: {\n        width: \"300px\",\n        paddingTop: theme.spacing * 2,\n    },\n    meta: {\n        textAlign: \"left\",\n    },\n    cardData: {\n        marginTop: theme.spacing * 2,\n        textAlign: \"left\",\n        border: theme.border,\n        padding: theme.spacing * 2,\n    },\n});\n\nexport default withStyles(style)(EslintFacepalm);","import React, { useContext } from \"react\";\nimport { Typography, Card, Button, Space } from \"antd\";\nimport {\n  Switch,\n  Route,\n  useHistory,\n  useRouteMatch\n} from \"react-router-dom\";\nimport { withStyles } from \"../Common/Theme\";\nimport GlobalProvider from \"../Common/GlobalContext\";\nimport Icon from \"../Common/Icons\";\nimport EslintFacepalmIcon from \"../Common/Icons/eslint-facepalm\";\nimport LoopTest from \"./LoopTest\";\nimport EslintFacepalm from \"./EslintFacepalm\"\n\nconst SideIdeas = ({ classes }: any) => {\n  const history = useHistory();\n  const { iconTheme } = useContext(GlobalProvider.context);\n\n  let { path, url } = useRouteMatch();\n\n  return (\n    <div className={classes.root}>\n      <Typography>\n        <Typography.Title>Small Side Projects I've done.</Typography.Title>\n      </Typography>\n      <Space>\n        <Card\n          hoverable\n          className={classes.card}\n          cover={\n            <div>\n              <EslintFacepalmIcon />\n            </div>\n          }\n          actions={[\n            <Button\n              type=\"link\"\n              icon={<Icon theme={iconTheme} name={\"Info\"} />}\n              onClick={() => history.push(`${url}/eslint`)}\n            >\n              Info\n            </Button>,\n            <Button\n              type=\"link\"\n              icon={<Icon theme={iconTheme} name={\"Github\"} />}\n              href={\"https://github.com/michaelkramer/eslint-plugin-facepalm\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Github\n          </Button>,\n          ]}\n        >\n          <Card.Meta\n            title=\"eslint-plugin-facepalm\"\n            description=\"eslint-plugins are really helpful, eslint-plugin-facepalm is designed\n          to just present you with cleaner code. By warning you when you left\n          some debug code.\"\n            className={classes.meta}\n          />\n        </Card>\n        <Card\n          hoverable\n          className={classes.card}\n\n          actions={[\n            <Button\n              type=\"link\"\n              icon={<Icon theme={iconTheme} name={\"Info\"} />}\n              onClick={() => history.push(`${url}/looptest`)}\n            >\n              Info\n            </Button>,\n\n          ]}\n        >\n          <Card.Meta\n            title=\"Loop Test\"\n            description=\"Fun Loop testing\"\n            className={classes.meta}\n          />\n        </Card>\n      </Space>\n      <Switch>\n        {/* <Route exact path={path}>\n\n        </Route> */}\n        <Route path={`${path}/eslint`}>\n          <EslintFacepalm />\n        </Route>\n        <Route path={`${path}/looptest`}>\n          <LoopTest />\n        </Route>\n      </Switch>\n\n    </div>\n  );\n};\n\nconst style = (theme?: any) => ({\n  root: {\n    padding: `0 ${theme.spacing * 2}px ${theme.spacing}px ${theme.spacing * 2\n      }px`,\n    width: \"80vw\",\n    textAlign: \"center\",\n  },\n  card: {\n    width: \"300px\",\n    paddingTop: theme.spacing * 2,\n  },\n  meta: {\n    textAlign: \"left\",\n  },\n  cardData: {\n    marginTop: theme.spacing * 2,\n    textAlign: \"left\",\n    border: theme.border,\n    padding: theme.spacing * 2,\n  },\n});\n\nexport default withStyles(style)(SideIdeas);\n","import React, { useState } from \"react\";\nimport { Button } from \"antd\";\nimport ReactMarkdown from \"react-markdown\";\nimport axios from \"axios\";\nimport { withStyles } from \"../Common/Theme\";\n\nconst notes = [\n  {\n    name:\n      \"So you changed your .gitignore but the files are still being pushed??\",\n    md: `${process.env.PUBLIC_URL}/notes/git-change-gitignore.md`,\n  },\n  {\n    name: \"Say you accidentally pushed your .env files 🤦‍♂️\",\n    md: `${process.env.PUBLIC_URL}/notes/git-undo-env.md`,\n  },\n  {\n    name: \"How to deploy to gh-pages\",\n    md: `${process.env.PUBLIC_URL}/notes/github-pages.md`,\n  },\n  {\n    name: \"Version Control\",\n    md: `${process.env.PUBLIC_URL}/notes/version-control.md`,\n  },\n];\n\nconst ListNotes = ({ classes }: any) => {\n  const [d, setD] = useState(\"\");\n  const readFile = (file: string) => {\n    return axios.get(file).then((response: any) => setD(response.data));\n  };\n  return (\n    <div className={classes.root}>\n      <h3>List of Notes</h3>\n      <div>\n        {!notes && <div>None</div>}\n        {notes && (\n          <ul>\n            {\" \"}\n            {notes.map((note, idx) => {\n              return (\n                <li\n                  key={idx}\n                  className={classes.listItem}\n                  onClick={() => readFile(note.md)}\n                >\n                  <Button>{note.name}</Button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        <div>\n          <ReactMarkdown source={d} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst styles = (theme?: any) => ({\n  root: {\n    textAlign: \"left\",\n  },\n  listItem: {\n    marginBottom: `${theme.spacing}px !important`,\n  },\n});\nexport default withStyles(styles)(ListNotes);\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport { withStyles } from \"../Common/Theme\";\nimport ListNotes from \"./ListNotes\";\n\nconst Notes = ({ classes }: any) => {\n  return (\n    <Typography className={classes.root}>\n      <Typography.Title>Notes</Typography.Title>\n      <ListNotes />\n    </Typography>\n  );\n};\nconst styles = (theme?: any) => ({\n  root: { marginLeft: theme.spacing, marginRight: theme.spacing * 2 },\n});\nexport default withStyles(styles)(Notes);\n","import React, { useContext } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Menu, Radio, Typography } from \"antd\";\nimport { default as AntIcon } from \"@ant-design/icons\";\nimport GlobalProvider from \"../Common/GlobalContext\";\nimport { ROUTES } from \"../constants\";\nimport Icon from \"../Common/Icons\";\nimport Home from \"../Home\";\nimport Resume from \"../Resume\";\nimport SideIdeas from \"../SideIdeas\";\nimport Notes from \"../Notes\";\n//! import ContactForm from \"../Contact\"; - this has been stashed\nimport { IconThemes } from \"../Common/Icons\";\n\ninterface MenuItem {\n  url: string;\n  title: string;\n  exact?: boolean;\n  icon?: string;\n  onClick?: any;\n  component?: any; // () => JSX.Element |\n}\n\nconst menuItems: MenuItem[] = [\n  { url: ROUTES.HOME, title: \"Home\", component: Home, exact: true },\n  {\n    url: ROUTES.RESUME,\n    title: \"Resume\",\n    component: Resume,\n    icon: \"User\",\n  },\n  { url: ROUTES.RLS, title: \"Rls\", icon: \"Home\" },\n  { url: ROUTES.SIDE, title: \"Side ideas\", icon: \"Idea\", component: SideIdeas },\n  { url: ROUTES.NOTES, title: \"Notes\", icon: \"Note\", component: Notes },\n  //! { url: \"/contact\", title: \"Contact\", component: ContactForm },\n];\n\nconst menuStyle = {\n  fontSize: \"12px\",\n  padding: \"0 16px\",\n  marginTop: \"4px\",\n  marginBottom: \"8px\",\n};\n\ninterface IMenuAppProps extends React.HTMLAttributes<HTMLBaseElement> {\n  mode?:\n    | \"vertical\"\n    | \"horizontal\"\n    | \"vertical-left\"\n    | \"vertical-right\"\n    | \"inline\"\n    | undefined;\n  omitHome?: boolean;\n}\n\nconst MenuApp = (props: IMenuAppProps) => {\n  const { iconTheme, setIconTheme } = useContext(GlobalProvider.context);\n  const location = useLocation();\n  const menu = props.omitHome\n    ? menuItems.filter((m) => m.url !== ROUTES.HOME)\n    : menuItems;\n  return (\n    <>\n      <Menu\n        defaultSelectedKeys={[location.pathname]}\n        theme=\"light\"\n        mode={props.mode ?? \"vertical\"}\n        className={props.className}\n      >\n        {menu.map((item: MenuItem) => (\n          <Menu.Item\n            key={item.url}\n            onClick={item.onClick}\n            icon={item.icon && <Icon theme={iconTheme} name={item.icon} />}\n          >\n            {item.url ? <Link to={item.url}>{item.title}</Link> : item.title}\n          </Menu.Item>\n        ))}\n      </Menu>\n\n      <Typography.Text style={menuStyle}>\n        I love Icons so play around\n      </Typography.Text>\n      <div style={menuStyle}>\n        <Radio.Group\n          onChange={(e) => {\n            setIconTheme(e.target.value);\n          }}\n          value={iconTheme}\n          optionType=\"button\"\n        >\n          {IconThemes.map((theme) => (\n            <Radio.Button\n              key={theme.label}\n              value={theme.value}\n              name={theme.label}\n            >\n              <AntIcon>\n                <theme.icon />\n              </AntIcon>\n            </Radio.Button>\n          ))}\n        </Radio.Group>\n      </div>\n    </>\n  );\n};\n\nexport { menuItems };\n\nexport default MenuApp;\n","import EmptyPage from \"./EmptyPage\";\nexport default EmptyPage;\n","import React from \"react\";\n\nconst EmptyPage = () => {\n  return (\n    <div>\n      <h3>EmptyPage</h3>\n    </div>\n  );\n};\n\nexport default EmptyPage;\n","import Menu, { menuItems } from \"./Menu\";\nimport Routes from \"./Routes\";\n\nexport { menuItems, Menu };\nexport default Routes;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport EmptyPage from \"../EmptyPage\";\nimport { menuItems } from \"./Menu\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      {menuItems.map((menuItem, index) => {\n        const Component = menuItem.component || EmptyPage;\n\n        return (\n          <Route exact={menuItem.exact} key={index} path={menuItem.url}>\n            <Component />\n          </Route>\n        );\n      })}\n      <Route path=\"*\">\n        <EmptyPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import Layout from \"./Layout\";\nexport default Layout;\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport { useLocation } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { Menu } from \"../Routes\";\n\ninterface $Props {\n  children: any;\n}\n\nconst LayoutComponent = ({ children }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Layout>\n      <Header />\n      <Layout>\n        {location.pathname === \"/\" && (\n          <Layout.Content className=\"App\">{children}</Layout.Content>\n        )}\n        {location.pathname !== \"/\" && (\n          <>\n            <Layout.Sider style={{ color: \"white\" }}>\n              <Menu />\n            </Layout.Sider>\n            <Layout>\n              <Layout.Content className=\"App\">{children}</Layout.Content>\n            </Layout>\n          </>\n        )}\n      </Layout>\n\n      <Footer />\n    </Layout>\n  );\n};\n\nexport default LayoutComponent;\n","import React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ConfigProvider } from \"antd\";\nimport { ThemeProvider } from \"react-jss\";\n\nimport \"./App.less\";\nimport GlobalContext from \"./Common/GlobalContext\";\nimport { Theme } from \"./Common/Theme\";\nimport Layout from \"./Layout\";\nimport Routes from \"./Routes\";\n\nconst antConfig = {\n  prefixCls: \"mk\",\n};\n\nfunction App() {\n  return (\n    <GlobalContext>\n      <ConfigProvider {...antConfig}>\n        <ThemeProvider theme={Theme}>\n          <Router>\n            <Layout>\n              <Routes />\n            </Layout>\n          </Router>\n        </ThemeProvider>\n      </ConfigProvider>\n    </GlobalContext>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}