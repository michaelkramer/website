{"version":3,"sources":["Common/Icons/IconTheme.ts","Common/Icons/IconList.ts","Common/Icons/index.tsx","Common/GlobalContext.tsx","Common/Theme/Theme.ts","Common/Theme/withStyles.tsx","Layout/Header.tsx","Layout/Footer.tsx","constants/routes.ts","Home/index.tsx","Resume/index.tsx","SideIdeas/index.tsx","Notes/ListNotes.tsx","Notes/index.tsx","Routes/Menu.tsx","EmptyPage/index.tsx","EmptyPage/EmptyPage.tsx","Routes/index.tsx","Routes/Routes.tsx","Layout/index.tsx","Layout/Layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["IconTheme","IconThemes","label","antd","value","icon","AI","fc","FC","bi","BI","IconList","name","theme","component","IconApp","props","newIcon","find","item","getIcon","Icon","context","React","createContext","GlobalProvider","children","useState","iconTheme","setIconTheme","Provider","Theme","spacing","withStyles","styles","options","injectSheet","overrides","merge","Header","location","useLocation","pathname","footer","textAlign","classes","Footer","Paragraph","className","Date","getFullYear","HOME","RESUME","RLS","SIDE","NOTES","Title","Typography","Text","homeParagraph","margin","width","menu","code","Menu","mode","omitHome","root","marginRight","button","img","useContext","href","process","target","rel","type","src","alt","index","notes","md","map","note","idx","Panel","header","key","marginLeft","menuItems","url","ROUTES","title","Home","exact","Resume","SideIdeas","Notes","menuStyle","fontSize","padding","marginTop","marginBottom","MenuApp","filter","m","defaultSelectedKeys","Item","onClick","to","style","Group","onChange","e","optionType","Button","EmptyPage","Routes","menuItem","Component","path","Layout","Content","Sider","color","antConfig","prefixCls","App","GlobalContext","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0bc1e877.chunk.js","sourcesContent":["import * as AI from \"react-icons/ai\";\nimport * as BI from \"react-icons/bi\";\nimport * as FC from \"react-icons/fc\";\n\nenum IconTheme {\n  antd = \"antd\",\n  fc = \"fc\",\n  bi = \"bi\",\n}\n\nconst IconThemes = [\n  {\n    label: IconTheme.antd,\n    value: IconTheme.antd,\n    icon: AI.AiOutlineAntDesign,\n  },\n  {\n    label: IconTheme.fc,\n    value: IconTheme.fc,\n    icon: FC.FcApproval,\n  },\n  {\n    label: IconTheme.bi,\n    value: IconTheme.bi,\n    icon: BI.BiCheckbox,\n  },\n];\n\nexport { IconTheme, IconThemes, AI, BI, FC };\n","import { IconTheme } from \"./IconTheme\";\nimport * as AI from \"react-icons/ai\";\nimport * as BI from \"react-icons/bi\";\nimport * as FC from \"react-icons/fc\";\nimport { IconType } from \"react-icons/lib\";\n\ninterface $Icon {\n  name: string;\n  theme: IconTheme;\n  component?: IconType;\n}\n\nconst IconList: $Icon[] = [\n  { name: \"User\", theme: IconTheme.antd, component: AI.AiOutlineUser },\n  { name: \"User\", theme: IconTheme.bi, component: BI.BiUser },\n  { name: \"User\", theme: IconTheme.fc, component: FC.FcBusinessman },\n\n  { name: \"PDF\", theme: IconTheme.antd, component: AI.AiOutlineFilePdf },\n  { name: \"PDF\", theme: IconTheme.bi, component: BI.BiFile },\n  { name: \"PDF\", theme: IconTheme.fc, component: FC.FcDocument },\n\n  { name: \"Home\", theme: IconTheme.antd, component: AI.AiOutlineHome },\n  { name: \"Home\", theme: IconTheme.bi, component: BI.BiHome },\n  { name: \"Home\", theme: IconTheme.fc, component: FC.FcHome },\n\n  { name: \"Idea\", theme: IconTheme.antd, component: AI.AiOutlineBulb },\n  { name: \"Idea\", theme: IconTheme.bi, component: BI.BiBulb },\n  { name: \"Idea\", theme: IconTheme.fc, component: FC.FcIdea },\n\n  { name: \"Note\", theme: IconTheme.antd, component: AI.AiOutlineFileText },\n  { name: \"Note\", theme: IconTheme.bi, component: BI.BiNotepad },\n  { name: \"Note\", theme: IconTheme.fc, component: FC.FcRules },\n];\n\nexport default IconList;\n","import React from \"react\";\nimport Icon from \"@ant-design/icons\";\nimport { IconTheme, IconThemes } from \"./IconTheme\";\nimport IconList from \"./IconList\";\n\nexport { IconTheme, IconThemes };\n\ninterface $Props {\n  theme: any;\n  name: string;\n}\n\nconst getIcon = ({ theme, name }: $Props) => {\n  const newIcon = IconList.find(\n    (item) => item.name === name && item.theme === theme\n  );\n  if (newIcon && newIcon.component) {\n    return <newIcon.component />;\n  }\n  return null;\n};\n\nconst IconApp = (props: $Props) => {\n  const icon = getIcon(props);\n  return icon && <Icon>{icon}</Icon>;\n};\nexport default IconApp;\n","import React, { useState } from \"react\";\nimport { IconTheme } from \"./Icons\";\nconst context = React.createContext<any>(null);\n\nconst GlobalProvider = ({ children }: any) => {\n  const [iconTheme, setIconTheme] = useState<IconTheme>(IconTheme.antd);\n\n  return (\n    <context.Provider value={{ iconTheme, setIconTheme }}>\n      {children}\n    </context.Provider>\n  );\n};\nGlobalProvider.context = context;\nexport default GlobalProvider;\n","const Theme = {\n  spacing: 16,\n};\nexport default Theme;\n","import injectSheet from \"react-jss\";\nimport merge from \"lodash/merge\";\n\nconst withStyles = (styles: any, options?: any) =>\n  injectSheet((theme) => {\n    if (\n      options &&\n      options.name &&\n      theme &&\n      theme.overrides &&\n      theme.overrides[options.name]\n    ) {\n      return merge(styles(theme), theme.overrides[options.name]);\n    }\n\n    return styles(theme);\n  });\n\nexport default withStyles;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Layout } from \"antd\";\n\nconst Header = () => {\n  const location = useLocation();\n  return (\n    <Layout.Header>\n      {location.pathname !== \"/\" && <span>&nbsp;</span>}\n    </Layout.Header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Layout, Typography } from \"antd\";\nimport { withStyles } from \"../Common/Theme\";\n\nconst Footer = ({ classes }: any) => {\n  return (\n    <Layout.Footer>\n      <Typography.Paragraph className={classes.footer}>\n        &copy; Copyright {new Date().getFullYear()}\n      </Typography.Paragraph>\n    </Layout.Footer>\n  );\n};\n\nconst style = () => ({\n  footer: { textAlign: \"right\" },\n});\n\nexport default withStyles(style)(Footer);\n","export const HOME = \"/\";\nexport const RESUME = \"/resume\";\nexport const RLS = \"/rls\";\nexport const SIDE = \"/side\";\nexport const NOTES = \"/notes\";\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport { withStyles } from \"../Common/Theme\";\nimport MenuApp from \"../Routes/Menu\";\n\nconst { Title, Text } = Typography;\n\nconst HomePage = ({ classes }: any) => {\n  return (\n    <Typography>\n      <Title>Michael Kramer</Title>\n      <Text code={true}>Simple website to display what I have done</Text>\n      <div className={classes.homeParagraph}>\n        I am a devoted Full Stack Software Engineer who loves solving problems\n        and learning new technologies. I have built products from idea to\n        implementation and moved from one platform to another. I am excited to\n        dive into a new experience.\n      </div>\n      <MenuApp mode=\"horizontal\" className={classes.menu} omitHome={true} />\n    </Typography>\n  );\n};\n\nconst style = (theme?: any) => ({\n  homeParagraph: {\n    margin: `${theme.spacing * 2}px auto`,\n    width: \"80vw\",\n    textAlign: \"center\",\n  },\n  menu: { textAlign: \"center\" },\n});\n\nexport default withStyles(style)(HomePage);\n","import React, { useContext } from \"react\";\nimport { Button } from \"antd\";\nimport GlobalProvider from \"../Common/GlobalContext\";\nimport { withStyles } from \"../Common/Theme\";\nimport Icon from \"../Common/Icons\";\n\nconst Resume = ({ classes }: any) => {\n  const { iconTheme } = useContext(GlobalProvider.context);\n  return (\n    <div className={classes.root}>\n      <div className={classes.button}>\n        <Button\n          href={`${process.env.PUBLIC_URL}/Michael_Kramer.pdf`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          type=\"link\"\n          icon={<Icon theme={iconTheme} name={\"PDF\"} />}\n        >\n          Download as PDF\n        </Button>\n      </div>\n      <div>\n        <img\n          src={`${process.env.PUBLIC_URL}/Michael_Kramer_01.jpg`}\n          alt=\"Michael Kramer\"\n          className={classes.img}\n        />\n      </div>\n      <div>\n        <img\n          src={`${process.env.PUBLIC_URL}/Michael_Kramer_02.jpg`}\n          alt=\"Michael Kramer\"\n          className={classes.img}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst styles = (theme?: any) => ({\n  root: { marginRight: theme.spacing * 2 },\n  button: { textAlign: \"right\" },\n  img: { width: \"100%\" },\n});\n\nexport default withStyles(styles)(Resume);\n","import React from \"react\";\n\nconst index = () => {\n  return (\n    <div>\n      <h3>index</h3>\n    </div>\n  );\n};\n\nexport default index;\n","import React from \"react\";\nimport { Collapse } from \"antd\";\nimport { withStyles } from \"../Common/Theme\";\n\nconst notes = [\n  {\n    name: \"Git Refresh .gitignore files\",\n    md: `${process.env.PUBLIC_URL}/notes/git-01.md`,\n  },\n];\n\nconst ListNotes = ({ classes }: any) => {\n  return (\n    <div className={classes.root}>\n      <h3>List of Notes</h3>\n      <Collapse>\n        {notes.map((note, idx) => {\n          return (\n            <Collapse.Panel header={note.name} key={idx}>\n              <div>{note.md}</div>\n            </Collapse.Panel>\n          );\n        })}\n      </Collapse>\n    </div>\n  );\n};\n\nconst styles = (theme?: any) => ({\n  root: { textAlign: \"left\" },\n});\nexport default withStyles(styles)(ListNotes);\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport { withStyles } from \"../Common/Theme\";\nimport ListNotes from \"./ListNotes\";\n\nconst Notes = ({ classes }: any) => {\n  return (\n    <Typography className={classes.root}>\n      <Typography.Title>Notes</Typography.Title>\n      <ListNotes />\n    </Typography>\n  );\n};\nconst styles = (theme?: any) => ({\n  root: { marginLeft: theme.spacing, marginRight: theme.spacing * 2 },\n});\nexport default withStyles(styles)(Notes);\n","import React, { useContext } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Menu, Radio, Typography } from \"antd\";\nimport { default as AntIcon } from \"@ant-design/icons\";\nimport GlobalProvider from \"../Common/GlobalContext\";\nimport { ROUTES } from \"../constants\";\nimport Icon from \"../Common/Icons\";\nimport Home from \"../Home\";\nimport Resume from \"../Resume\";\nimport SideIdeas from \"../SideIdeas\";\nimport Notes from \"../Notes\";\n//! import ContactForm from \"../Contact\"; - this has been stashed\nimport { IconThemes } from \"../Common/Icons\";\n\ninterface MenuItem {\n  url: string;\n  title: string;\n  exact?: boolean;\n  icon?: string;\n  onClick?: any;\n  component?: any; // () => JSX.Element |\n}\n\nconst menuItems: MenuItem[] = [\n  { url: ROUTES.HOME, title: \"Home\", component: Home, exact: true },\n  {\n    url: ROUTES.RESUME,\n    title: \"Resume\",\n    component: Resume,\n    icon: \"User\",\n  },\n  { url: ROUTES.RLS, title: \"Rls\", icon: \"Home\" },\n  { url: ROUTES.SIDE, title: \"Side ideas\", icon: \"Idea\", component: SideIdeas },\n  { url: ROUTES.NOTES, title: \"Notes\", icon: \"Note\", component: Notes },\n  //! { url: \"/contact\", title: \"Contact\", component: ContactForm },\n];\n\nconst menuStyle = {\n  fontSize: \"12px\",\n  padding: \"0 16px\",\n  marginTop: \"4px\",\n  marginBottom: \"8px\",\n};\n\ninterface IMenuAppProps extends React.HTMLAttributes<HTMLBaseElement> {\n  mode?:\n    | \"vertical\"\n    | \"horizontal\"\n    | \"vertical-left\"\n    | \"vertical-right\"\n    | \"inline\"\n    | undefined;\n  omitHome?: boolean;\n}\n\nconst MenuApp = (props: IMenuAppProps) => {\n  const { iconTheme, setIconTheme } = useContext(GlobalProvider.context);\n  const location = useLocation();\n  const menu = props.omitHome\n    ? menuItems.filter((m) => m.url !== ROUTES.HOME)\n    : menuItems;\n  return (\n    <>\n      <Menu\n        defaultSelectedKeys={[location.pathname]}\n        theme=\"light\"\n        mode={props.mode ?? \"vertical\"}\n        className={props.className}\n      >\n        {menu.map((item: MenuItem) => (\n          <Menu.Item\n            key={item.url}\n            onClick={item.onClick}\n            icon={item.icon && <Icon theme={iconTheme} name={item.icon} />}\n          >\n            {item.url ? <Link to={item.url}>{item.title}</Link> : item.title}\n          </Menu.Item>\n        ))}\n      </Menu>\n\n      <Typography.Text style={menuStyle}>\n        I love Icons so play around\n      </Typography.Text>\n      <div style={menuStyle}>\n        <Radio.Group\n          onChange={(e) => {\n            setIconTheme(e.target.value);\n          }}\n          value={iconTheme}\n          optionType=\"button\"\n        >\n          {IconThemes.map((theme) => (\n            <Radio.Button\n              key={theme.label}\n              value={theme.value}\n              name={theme.label}\n            >\n              <AntIcon>\n                <theme.icon />\n              </AntIcon>\n            </Radio.Button>\n          ))}\n        </Radio.Group>\n      </div>\n    </>\n  );\n};\n\nexport { menuItems };\n\nexport default MenuApp;\n","import EmptyPage from \"./EmptyPage\";\nexport default EmptyPage;\n","import React from \"react\";\n\nconst EmptyPage = () => {\n  return (\n    <div>\n      <h3>EmptyPage</h3>\n    </div>\n  );\n};\n\nexport default EmptyPage;\n","import Menu, { menuItems } from \"./Menu\";\nimport Routes from \"./Routes\";\n\nexport { menuItems, Menu };\nexport default Routes;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport EmptyPage from \"../EmptyPage\";\nimport { menuItems } from \"./Menu\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      {menuItems.map((menuItem, index) => {\n        const Component = menuItem.component || EmptyPage;\n\n        return (\n          <Route exact={menuItem.exact} key={index} path={menuItem.url}>\n            <Component />\n          </Route>\n        );\n      })}\n      <Route path=\"*\">\n        <EmptyPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import Layout from \"./Layout\";\nexport default Layout;\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport { useLocation } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { Menu } from \"../Routes\";\n\ninterface $Props {\n  children: any;\n}\n\nconst LayoutComponent = ({ children }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Layout>\n      <Header />\n      <Layout>\n        {location.pathname === \"/\" && (\n          <Layout.Content className=\"App\">{children}</Layout.Content>\n        )}\n        {location.pathname !== \"/\" && (\n          <>\n            <Layout.Sider style={{ color: \"white\" }}>\n              <Menu />\n            </Layout.Sider>\n            <Layout>\n              <Layout.Content className=\"App\">{children}</Layout.Content>\n            </Layout>\n          </>\n        )}\n      </Layout>\n\n      <Footer />\n    </Layout>\n  );\n};\n\nexport default LayoutComponent;\n","import React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ConfigProvider } from \"antd\";\nimport { ThemeProvider } from \"react-jss\";\n\nimport \"./App.less\";\nimport GlobalContext from \"./Common/GlobalContext\";\nimport { Theme } from \"./Common/Theme\";\nimport Layout from \"./Layout\";\nimport Routes from \"./Routes\";\n\nconst antConfig = {\n  prefixCls: \"mk\",\n};\n\nfunction App() {\n  return (\n    <GlobalContext>\n      <ConfigProvider {...antConfig}>\n        <ThemeProvider theme={Theme}>\n          <Router>\n            <Layout>\n              <Routes />\n            </Layout>\n          </Router>\n        </ThemeProvider>\n      </ConfigProvider>\n    </GlobalContext>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}